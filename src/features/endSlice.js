import { createSlice } from '@reduxjs/toolkit';


export const endSlice = createSlice({
  name: 'end',
  initialState: {
    value: new Date(2022/6/10).getTime(),//getTime retorna cuandtos milisegundos han pasadpo desde media noche de 1970
  },
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    
    // Use the PayloadAction type to declare the contents of `action.payload`
    setEnd: (state, action) => {
      state.value = action.payload;
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
 
});

export const { setEnd } = endSlice.actions;

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`
export const selectEnd = (state) => state.end.value;

// We can also write thunks by hand, which may contain both sync and async logic.
// Here's an example of conditionally dispatching actions based on current state.


export default endSlice.reducer;